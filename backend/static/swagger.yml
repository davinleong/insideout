openapi: 3.0.3
info:
  title: Inside Out API
  description: API for emotion detection from images
  version: 1.0.0
  contact:
    email: cloudfan150@gmail.com

servers:
  - url: http://localhost:8282
    description: Development server
  - url: https://potipress.com/api
    description: Production server

paths:
  /process:
    post:
      tags:
        - "Emotion"
      summary: "Process an image to detect emotion and return associated color."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProcessRequest"
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProcessResponse"
        "400":
          description: "Invalid input"
        "500":
          description: "Internal Server Error"
  /emotions:
    post:
      tags:
        - "Emotion"
      summary: "Create a new emotion record with RGB value for a user."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateEmotionRequest"
      responses:
        "200":
          description: "Emotion created successfully."
        "400":
          description: "Missing information."
        "409":
          description: "Emotion already exists."
        "500":
          description: "Internal Server Error."
    get:
      tags:
        - "Emotion"
      summary: "Retrieve all emotions and their RGB values for a user."
      parameters:
        - name: user_id
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "List of emotions found"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EmotionResponse"
        "400":
          description: "User ID not provided"
        "404":
          description: "Emotions not found"
        "500":
          description: "Internal Server Error"

  /emotions/{emotion}:
    get:
      tags:
        - "Emotion"
      summary: "Retrieve RGB value for a specified emotion of a user."
      parameters:
        - name: emotion
          in: path
          required: true
          schema:
            type: string
        - name: user_id
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Emotion found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmotionResponse"
        "404":
          description: "Emotion not found"
        "500":
          description: "Internal Server Error"
    patch:
      tags:
        - "Emotion"
      summary: "Update RGB value for a specified emotion of a user."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateEmotionRequest"
      responses:
        "200":
          description: "Emotion updated"
        "404":
          description: "Emotion not found"
        "500":
          description: "Internal Server Error"
    delete:
      tags:
        - "Emotion"
      summary: "Delete a specified emotion of a user."
      parameters:
        - name: emotion
          in: path
          required: true
          schema:
            type: string
        - name: user_id
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Emotion deleted"
        "404":
          description: "Emotion not found"
        "500":
          description: "Internal Server Error"

components:
  schemas:
    ProcessRequest:
      type: object
      required:
        - user_id
        - image
      properties:
        user_id:
          type: string
        image:
          type: string
          format: base64
          description: "Base64 encoded image"
    ProcessResponse:
      type: object
      properties:
        response:
          type: string
        color:
          type: string
    CreateEmotionRequest:
      type: object
      required:
        - user_id
        - emotion
        - rgb
      properties:
        user_id:
          type: string
        emotion:
          type: string
        rgb:
          type: string
    UpdateEmotionRequest:
      type: object
      required:
        - user_id
        - rgb
      properties:
        user_id:
          type: string
        rgb:
          type: string
    EmotionResponse:
      type: object
      properties:
        emotion:
          type: string
        rgb:
          type: string
